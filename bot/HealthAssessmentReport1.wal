­ÑdefVar --name fileLocation --type String --value "D:\\RPA\\github\\refundBot\\data"
import --name refundReportBak --type "File" --content  --extension ".repx"
import --name refundReport1 --type "File" --content  --extension ".repx"
defVar --name projectPath --type String --value "D:\\RPA\\github\\refundBot"

exportReport --format "Pdf" --title "Refund Receipt" --watermark "None" --createrandomfile  --asset "${asset.refundReport1}" --mappings "CustomerName=Jim Davies,TicketNumber=E4545499,Destination=Bath,Amount=45.5,RefundReason=Covid,CustomerAddress=15 Agent Street,RefundDate=2021-12-29 09:25:23" fileLocation=filepath
logMessage --message "Created ${fileLocation}" --type "Info"*21.0.1.0